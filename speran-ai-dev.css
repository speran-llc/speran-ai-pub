body {
    overflow-y: scroll;
}

/* Need to set #hero.background-image */

#hero {
    height: 20vh;
    /* Set the height of the hero section (e.g., full viewport height) */
    width: 100%;
    /* Set the width to be full width of the viewport */
}

/* Mobile Background */
@media only screen and (max-width: 767px) {
    #hero {
        background-position: -50px;
        background-size: cover;
    }
}

/* Desktop Background */
@media only screen and (min-width: 768px) {
    #hero {
        background-position: 200px 50%;
        background-size: cover;
    }
}

.text-background {
    width: 100%;
    color: white;
    background-color: rgba(0, 0, 0, 0.7);
    /* Semi-transparent black */
    padding: 5px;
    /* Or as needed */
    display: inline-block;
}

.text-background-inner {
    max-width: 900px;
}

.checkbox-container {
    border: 1px solid #D3D3D3;
    border-radius: 10px;
    cursor: pointer;
}

.checkbox-container input[type="checkbox"] {
    cursor: pointer;
}

.grow-wrap {
    /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
    display: grid;
  }
.grow-wrap::after {
/* Note the weird space! Needed to preventy jumpy behavior */
content: attr(data-replicated-value) " ";

/* This is how textarea text behaves */
white-space: pre-wrap;

/* Hidden from view, clicks, and screen readers */
visibility: hidden;
}
.grow-wrap > textarea {
/* You could leave this, but after a user resizes, then it ruins the auto sizing */
resize: none;

/* Firefox shows scrollbar on growth, you can hide like this. */
overflow: hidden;
}
.grow-wrap > textarea,
.grow-wrap::after {
/* Identical styling required!! */
border: 1px solid black;
padding: 0.5rem;
font: inherit;

/* Place on top of each other */
grid-area: 1 / 1 / 2 / 2;
}

.promptResponse {
    min-height: 100vh;
}

.sai-content {
    max-width: 600px;
}

.prompt {
    position: fixed; /* Fixed positioning relative to the viewport */
    bottom: 0; /* Stick to the bottom */
    left: 0; /* Set left to 50% of the viewport */
    right: 0;
    width: 100%; /* Adjust the width as needed, not full width */
    background-color: white;
    max-width: 600px;
}

.textarea-container {
    position: relative;
    display: inline-block; /* Or as per your layout requirement */
}

button.send {
    position: absolute;
    bottom: 10px;
    right: 25px;
}

#text {
    height: 100px;
}